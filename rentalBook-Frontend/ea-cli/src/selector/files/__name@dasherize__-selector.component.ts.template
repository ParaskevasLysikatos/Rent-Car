import { Component, forwardRef, Injector } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { Create<%= classify(name) %>Component } from 'src/app/<%= dasherize(name) %>/create-<%= dasherize(name) %>/create-<%= dasherize(name) %>.component';
import { Edit<%= classify(name) %>Component } from 'src/app/<%= dasherize(name) %>/edit-<%= dasherize(name) %>/edit-<%= dasherize(name) %>.component';
import { I<%= classify(name) %> } from 'src/app/<%= dasherize(name) %>/<%= dasherize(name) %>.interface';
import { <%= classify(name) %>Service } from 'src/app/<%= dasherize(name) %>/<%= dasherize(name) %>.service';
import { AbstractSelectorComponent } from '../abstract-selector/abstract-selector.component';
import { ApiService } from 'src/app/_services/api-service.service';

@Component({
  selector: 'app-<%= dasherize(name) %>-selector',
  templateUrl: './<%= dasherize(name) %>-selector.component.html',
  styleUrls: ['./<%= dasherize(name) %>-selector.component.scss'],
  providers: [
    {
      provide: NG_VALUE_ACCESSOR,
      useExisting: forwardRef(() => <%= classify(name) %>SelectorComponent),
      multi: true
    },
    {
      provide: AbstractSelectorComponent,
      useExisting: <%= classify(name) %>SelectorComponent
    },
    {provide: ApiService, useClass: <%= classify(name) %>Service}
  ]
})
export class <%= classify(name) %>SelectorComponent extends AbstractSelectorComponent<I<%= classify(name) %>> {
  readonly EditComponent = Edit<%= classify(name) %>Component;
  readonly CreateComponent = Create<%= classify(name) %>Component;
  label = '';
}
